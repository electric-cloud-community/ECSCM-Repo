<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="generator"
          content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
    <meta content="text/html; charset=us-ascii"
          http-equiv="content-type" />

    <title>ElectricFlow Plugin for Repo</title>
    <link rel="stylesheet"
          href="../../plugins/@PLUGIN_KEY@/pluginhelp.css"
          type="text/css"
          media="screen" />
</head>

<body>
    <div class="help">
        <h1 class="pluginname">Repo</h1>

        <p>Plugin Version @PLUGIN_VERSION@</p>
        <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />
        <p>Revised on July 1, 2015</p>
        <h1>Contents</h1>
        <ul>
            <li><p><a href="#overview">Overview</a></p></li>
            <li><p><a href="#setupconfig">Setting Up the Plugin Configuration</a></p></li>
            <li><p><a href="#procedures">Plugin Procedures</a></p></li>
            <ul>
                <li><a href="#CheckoutCode">CheckoutCode</a></li>
                <li><a href="#getSCMTag">getSCMTag</a></li>
                <li><a href="#Preflight (agent side)">Preflight (agent side)</a></li>
                <li><a href="#Preflight (client side)">Preflight (client side)</a></li>
                <li><a href="#updateLastGoodAndLastCompleted">updateLastGoodAndLastCompleted</a></li>
            </ul>
            <li><p><a href="#rns">Release Notes</a></p></li>
        </ul>
        <p>IMPORTANT: For all parameter descriptions in this document, required parameters are shown in <span class='required'>bold italics</span>.</p>
        <p>IMPORTANT: In the ElectricFlow UI, from the Home page, open the Main Menu, and click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</p>
        <h1 id="overview">Overview</h1>

        <p>Repo is a tool that Google built on top of Git to manage
        the many Git repositories, perform uploads to revision
        control systems, and automate parts of the Android
        development workflow. Repo does not replace Git. It makes easier

        to work with Git in the context of Android. The <b>repo</b> command
        is an executable Python script that can be put anywhere in the development system.</p>
        <p>For more information about Repo, go to  <a href="https://source.android.com/source/developing.html">
        Git and Repo</a>.</p>

        <h2>ElectricFlow Integration to Repo</h2>

        <p>Use this plugin in ElectricFlow to communicate with your Git
        repositories, to download the repositories, to check out code,
        perform preflight operations, and implement continuous
        integration.</p>

        <h2>Integrated Version</h2>

        <p>This plugin was developed and tested against version
        1.7.4.3.</p>

        <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>

        <p>Plugin configurations are sets of parameters that apply across some or all of the plugin procedures.
        They reduce repetition of common values, create predefined sets of parameters for end users, and store
        credentials securely. Each configuration has a unique name that is automatically entered in designated
        parameters in the procedures.</p>
        <h2>Input</h2>

        <ol>
            <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
            <li>Click <b>ECSCM-Repo</b>.</li>
            <li>In the CreateConfiguration row, click <b>Run</b>.</li>
            <li>To create a Repo configuration, enter the following information and click <b>OK</b>.
            <br /> Remember that you may need to create additional configurations later.</li>

            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>config
                        <!-- Configuration Name --></td>

                        <td>A unique name for the configuration. (Required)</td>

                    </tr>



                    <tr>

                        <td>description
                        <!-- Description --></td>

                        <td>Description of the configuration. The default is "Repo configuration".</td>

                    </tr>

                    <tr>

                        <td>RepoManifest
                        <!-- Manifest --></td>

                        <td>A manifest file in the repository. If no manifest file is specified, the default is default.xml.</td>

                    </tr>

                    <tr>

                        <td>RepoMirror
                        <!-- Mirror the repositories --></td>

                        <td>If this parameter is selected, the plugin creates a mirror of the GIT repositories.</td>

                    </tr>
                    <tr>

                        <td class='required'>RepoUrl
                        <!-- Manifest repository URL --></td>

                        <td>URL from which to get the manifest repository. (Required)</td>

                    </tr>

                    <tr>

                        <td>RepoUserEmail
                        <!-- Manifest repository URL --></td>

                        <td>Email address used to set the <b>git --global</b> <i>user.email</i> option.</td>

                    </tr>
                    <tr>

                        <td>RepoUserName
                        <!-- User Name --></td>

                        <td>User Name used to set the <b>git --global</b> <i>user.email</i> option.</td>

                    </tr>
                    <tr>

                        <td>scmRepoPath
                        <!-- User Name --></td>
                        <td>Absolute path to the repo executable. By default, the plugin assumes that the repo executable is specified in the system path variable.</td>

                    </tr>

                </tbody>

            </table>
            <br />
            <img src="../../plugins/@PLUGIN_KEY@/images/Repo-1.png"  alt="form"/>
            <br />
        </ol>
        <!-- There is no Configure link on the Administration > Plugin Manager page so the following does not apply.
             <h2>Output</h2>
             <p>The Repo Configurations page now shows the new configuration.</p>
             <p>You can also manage your Repo configurations in this page. Click <b>Edit</b> to modify an existing configuration or
             <b>Delete</b> to remove an existing configuration.</p>
        -->
        <h1 id="procedures">Plugin Procedures</h1>

        <div id="CheckoutCode">
            <a name='CheckoutCode'
               id="CheckoutCode"></a>

            <h2>CheckoutCode</h2>

            <p>The CheckoutCode procedure downloads code from a Git
            repository and puts it in a working directory using
            the Repo tool.</p>
            <h3>Input</h3>

            <ol>
                <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
                <li>Go to the CheckoutCode procedure.</li>
                <li>Enter the following parameters:<br />
                <table class="grid">

                    <thead>

                        <tr>

                            <th>Parameter</th>



                            <th>Description</th>

                        </tr>

                    </thead>



                    <tbody>

                        <tr>

                            <td class='required'>Configuration</td>


                            <td>The SCM configuration to  use. The default configuration is <i>default</i>. (Required)</td>

                        </tr>

                        <tr>

                            <td>Use agent path</td>



                            <td>When this parameter is selected with the <b>Destination
                            Directory</b> parameter, the path to the source tree is defined
                            in the custom resource property of a resource.
                            </td>

                        </tr>


                        <tr>

                            <td>Destination Directory</td>


                            <td>The relative or absolute path where the source tree is created.</td>

                        </tr>



                        <tr>

                            <td>Branch</td>


                            <td>The Git branch to use.</td>

                        </tr>



                        <tr>

                            <td>Project list</td>



                            <td>The list of projects to check out, such as <i>project0 project1 project2</i>.</td>

                        </tr>

                    </tbody>

                </table>
                </li>
                <br />
                <img src="../../plugins/@PLUGIN_KEY@/images/Repo-2.png" alt="form" />
                <br />

            </ol>
            <h3>Output</h3>
            <p>After the job runs, you can view the results on the Job Details page in ElectricFlow.
            The code from the Git repository was successfully downloaded.</p>
            <p>In the <b>CheckoutCode</b> step, click the Log button to see the diagnostic information.</p>
        </div>
        <div id="getSCMTag">

            <a name='getSCMTag' id="getSCMTag"></a>



            <h2>getSCMTag</h2>



            <p>This procedure is used for Continuous Integration.

            It monitors the repository to discover if

            something changed, which triggers a pre-configured

            procedure.</p>

            <h3>Input</h3>

            <ol>
                <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
                <li>Go to the getSCMTag procedure.</li>
                <li>Enter the following parameters:<br />
                <table class="grid">

                    <thead>
                        <tr>
                            <th>Parameter</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class='required'>config</td>
                            <td>Name of the Git configuration. The default name is <i>default</i>.</td>
                        </tr>
                        <tr>
                            <td class='required'>dest</td>
                            <td>The working directory to monitor.</td>
                        </tr>
                        <tr>

                            <td class='required'>RepoAgentPath</td>



                            <td>When this parameter is selected, only the branch specified
                            in the <b>RepoBranch</b> field is downloaded, not the entire
                            source code tree.</td>

                        </tr>


                        <tr>

                            <td>RepoBranch</td>



                            <td>The Git branch to monitor. The default branch is <i>default</i>.</td>

                        </tr>



                        <tr>

                            <td>RepoProjectList</td>



                            <td>The list of projects to include in the sentry, such as
                            <i>project0 project1 project2</i>.</td>
                        </tr>
                    </tbody>
                </table>
                </li>
                <br />
                <img src="../../plugins/@PLUGIN_KEY@/images/Repo-3.png" alt="form" />
                <br />

            </ol>

            <h3>Output</h3>
            <p>After the job runs, you can view the results on the Job Details page in ElectricFlow.
            It shows that the results of monitoring the repository.</p>
            <p>In the <b>getSCMTag</b> step, click the Log button to see the diagnostic information.</p>
        </div>

        <div id="Preflight (agent side)">

            <a name='Preflight (agent side)' id="Preflight (agent side)"></a>



            <h2>Preflight (agent side)</h2>



            <p>This plugin runs the agent side part of a

            preflight workflow.</p>

            <h3>Input</h3>

            <ol>
                <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
                <li>Go to the Preflight procedure.</li>
                <li>Enter the following parameters:<br /></li>
                <table class="grid">

                    <thead>

                        <tr>

                            <th>Parameter</th>



                            <th>Description</th>

                        </tr>

                    </thead>



                    <tbody>

                        <tr>

                            <td class='required'>Configuration</td>



                            <td>Name of the SCM configuration to use.

                            (Required)</td>

                        </tr>



                        <tr>

                            <td>Destination Directory</td>



                            <td>A path relative to the job workspace,

                            where the source tree will be created.</td>

                        </tr>

                    </tbody>

                </table>
                <br />
                <img src="../../plugins/@PLUGIN_KEY@/images/Repo-4.png" alt="form" />
                <br />

            </ol>

            <h3>Output</h3>
            <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The preflight workflow was successfully completed.</p>
            <p>In the <b>Preflight</b> step, click the Log button to see the diagnostic information.</p>

        </div>
        <div id="Preflight (client side)">

            <a name='Preflight (client side)' id="Preflight (client side)"></a>



            <h2>Preflight (client side)</h2>



            <p>This will execute the client part of the

            preflight.</p>



            <p>This parameters can be set in the .preflight file,

            or passed directly to the ecclientpreflight tool.</p>



            <h3>Preflight parameters</h3>



            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>



                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td>repoworkdir</td>



                        <td>The developer's source directory.</td>

                    </tr>



                    <tr>

                        <td>agentworkdir</td>



                        <td>The path to the source directory used

                        by the agent.</td>

                    </tr>

                </tbody>

            </table>

        </div>
        <div id="updateLastGoodAndLastCompleted">

            <a name='updateLastGoodAndLastCompleted'

id="updateLastGoodAndLastCompleted"></a>



            <h2>updateLastGoodAndLastCompleted</h2>



            <p>This plugin runs the agent side part of a

            preflight workflow.</p>

            <h3>Input</h3>

            <ol>
                <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
                <li>Go to the updateLastGoodAndLastCompleted procedure.</li>
                <li>Enter the following parameters:<br /></li>
                <table class="grid">

                    <thead>

                        <tr>

                            <th>Parameter</th>



                            <th>Description</th>

                        </tr>

                    </thead>



                    <tbody>

                        <tr>

                            <td class='required'>config</td>



                            <td>Name of the SCM configuration to use. The default configuration is <i>default</i>.

                            (Required)</td>

                        </tr>

                    </tbody>

                </table>
                <br />
                <img src="../../plugins/@PLUGIN_KEY@/images/Repo-5.png" alt="form" />
                <br />

            </ol>

            <h3>Output</h3>
            <p>After the job runs, you can view the results on the Job Details page in ElectricFlow.
            If the job outcome is successful, ElectricFlow updates the "last successful snapshot" property
            to the revision used in the job.</p>
            <p>In the <b>updateLastGoodAndLastCompleted</b> step, click the Log button to see the diagnostic information.</p>

        </div>
        <h1 id="rns">Release Notes</h1>
        <h2>@PLUGIN_KEY@-2.2.1</h2>
        <ul>
            <li>Added metadata that is required for 9.0 release.</li>
        </ul>
        <h2>@PLUGIN_KEY@ 2.2.0</h2>
        <ul>
            <li>Added support for Changelog reports in builds that are triggered through Continous Integration schedules.
            The Changelog reports have details about the commits made since the previous build.</li>
            <li>Added support for Preflight reports in preflight builds. The Preflight reports have details about the user's changes.</li>
            <li>Added the dependency on ECSCM 2.2.8 plugin.</li>
        </ul>

        <h2>@PLUGIN_KEY@ 2.1.1</h2>
        <ul>
            <li>Cleaned up the step selector names.</li>
        </ul>

        <h2>@PLUGIN_KEY@-2.1.0</h2>

        <ul>
            <li>Added the dest parameter to the getSCMTag procedure. Use this parameter to monitor the working directory.</li>
            <li>Added the RepoProjectList parameter to the getSCMTag procedure. Use this parameter to include
            the list of projects to include in the sentry.</li>
            <li>The "Destination Directory" parameter is now works as expected.</li>
            <li>Fixed some broken regex.</li>
            <li>Added more information about the procedures to the plugin.</li>
            <li>Added the RepoUserEmail, RepoUserName, and scm_repoPath parameters to the configuration.</li>
        </ul>

        <h2>@PLUGIN_KEY@-2.0.0</h2>

        <ul>
            <li>XML parameter panels.</li>

            <li>Made Help page changes.</li>
        </ul>

        <h2>@PLUGIN_KEY@-1.0.0</h2>

        <ul>
            <li>Added sentry SCM features.</li>
            <li>Added checkout SCM features.</li>
            <li>Added preflight SCM features.</li>
        </ul>
    </div>
</body>
</html>
